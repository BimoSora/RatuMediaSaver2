import { Api } from 'telegram';
import { Snake } from '../../client';
export declare class ResultsMessagesViews {
    views?: Views[];
    date: Date | number;
    constructor(results: Api.messages.MessageViews);
}
declare class Views {
    views?: number;
    forwards?: number;
    replies?: Api.MessageReplies;
    constructor(getMessagesViews: Api.MessageViews);
}
/**
 * Get and increase the view counter of a message sent or forwarded from a channel.
 * @param snakeClient - Client
 * @param {number|string|bigint} chatId - Where the message was found.
 * @param {Array} messageId - IDs of message.
 * @param {boolean} increment - Whether to mark the message as viewed and increment the view counter
 * ```ts
 * bot.command("getMessagesViews",async (ctx)=>{
 *     let results = await ctx.telegram.getMessagesViews(ctx.chat.id,[ctx.id])
 *     console.log(results)
 * })
 * ```
 */
export declare function GetMessagesViews(snakeClient: Snake, chatId: number | string | bigint, messageId: number[], increment?: boolean): Promise<ResultsMessagesViews>;
export {};
