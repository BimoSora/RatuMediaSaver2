import { MigrateTo } from '../../Utils/MigrateTo';
import { BannedRights } from '../../Utils/BannedRight';
import { ChatPhoto } from '../../Utils/ChatPhoto';
import { RestrictionReason } from '../../Utils/RestrictionReason';
import { AdminRights } from '../../Utils/AdminRights';
import { Api } from 'telegram';
import { Snake } from '../../client';
export declare class ResultGetEntity {
    type?: string;
    self?: boolean;
    contact?: boolean;
    mutualContact?: boolean;
    deleted?: boolean;
    bot?: boolean;
    botChatHistory?: boolean;
    botNochats?: boolean;
    verified?: boolean;
    restricted?: boolean;
    min?: boolean;
    botInlineGeo?: boolean;
    support?: boolean;
    scam?: boolean;
    applyMinPhoto?: boolean;
    fake?: boolean;
    id: bigint;
    accessHash?: bigint;
    firstName?: string;
    lastName?: string;
    username?: string;
    phone?: string;
    status?: string;
    botInfoVersion?: number;
    botInlinePlaceholder?: string;
    langCode?: string;
    creator?: boolean;
    kicked?: boolean;
    left?: boolean;
    deactivated?: boolean;
    callActive?: boolean;
    callNotEmpty?: boolean;
    title: string;
    participantsCount: number;
    version: number;
    migratedTo?: MigrateTo;
    adminRights?: AdminRights;
    defaultBannedRights?: BannedRights;
    bannedRights?: BannedRights;
    broadcast?: boolean;
    megagroup?: boolean;
    signatures?: boolean;
    hasLink?: boolean;
    hasGeo?: boolean;
    slowmodeEnabled?: boolean;
    gigagroup?: boolean;
    restrictionReason?: RestrictionReason[];
    dcId?: number;
    photo?: ChatPhoto;
    noforward?: boolean;
    constructor(resultsGetEntity: Api.TypeUser | Api.TypeChat | Api.Channel);
}
export declare function GetEntity(snakeClient: Snake, chatId: bigint | string | number, useCache?: boolean): Promise<ResultGetEntity>;
