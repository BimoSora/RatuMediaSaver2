import { Snake } from '../../client';
import * as Updates from '../../Update';
export interface editBannedMoreParams {
    untilDate?: number;
    viewMessages?: boolean;
    sendMessages?: boolean;
    sendMedia?: boolean;
    sendStickers?: boolean;
    sendGifs?: boolean;
    sendGames?: boolean;
    sendInline?: boolean;
    sendPolls?: boolean;
    changeInfo?: boolean;
    inviteUsers?: boolean;
    pinMessages?: boolean;
    embedLinks?: boolean;
}
/**
 * Ban/unban/kick a user in a supergroup/channel.
 * @param snakeClient - Client
 * @param {number|bigint|string} chatId - Chat/Group/Channel id.
 * @param {number|bigint|string} userId - User id.
 * @param {Object} more - more parameters to use.
 * ```ts
 * bot.command("ban",async (ctx) => {
 * if((!ctx.chat.private) && ctx.replyToMessage){
 *   let results = await ctx.telegram.editBanned(ctx.chat.id,ctx.replyToMessage.from.id)
 *   console.log(results)
 * }
 * })
 * ```
 * This method will return UpdateNewMessage or UpdateNewChannelMessage. if success.
 */
export declare function EditBanned(snakeClient: Snake, chatId: bigint | number | string, userId: bigint | number | string, more?: editBannedMoreParams): Promise<Updates.UpdateNewMessage | Updates.UpdateNewChannelMessage | undefined>;
