import { Api } from 'telegram';
import { Snake } from '../../client';
/**
 * Get channels/supergroups/geogroups we're admin in. Usually called when the user exceeds the limit for owned public channels/supergroups/geogroups, and the user is given the choice to remove one of his channels/supergroups/geogroups.
 * @param snakeClient - client
 * @param {boolean} byLocation - Get geogroups.
 * @param {boolean} checkLimit - If set and the user has reached the limit of owned public channels/supergroups/geogroups, instead of returning the channel list one of the specified errors will be returned. <br/>
 * Useful to check if a new public channel can indeed be created, even before asking the user to enter a channel username to use in channels.checkUsername/channels.updateUsername.
 * ```ts
 * bot.command("getAdminedPublicChannels",async (ctx) => {
 *    if(!ctx.chat.private){
 *        let results = await ctx.telegram.getAdminedPublicChannels()
 *        console.log(results)
 *    }
 * })
 * ```
 */
export declare function GetAdminedPublicChannels(snakeClient: Snake, byLocation?: boolean, checkLimit?: boolean): Promise<Api.messages.TypeChats>;
