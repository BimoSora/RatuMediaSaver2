import { ResultGetEntity } from '../Telegram/Users/GetEntity';
import { Snake } from '../client';
import { Api } from 'telegram';
import { Composer, ErrorHandler } from './Composer';
export declare type LoggerInfo = (...args: Array<any>) => void;
export declare class MainContext extends Composer {
    connected: Boolean;
    aboutMe: ResultGetEntity;
    entityCache: Map<bigint | string, ResultGetEntity>;
    tgSnakeLog: boolean;
    consoleColor: string;
    log: LoggerInfo;
    errorHandler: ErrorHandler;
    constructor();
    handleUpdate(update: Api.TypeUpdate | ResultGetEntity, SnakeClient: Snake): Promise<any>;
    catch(errorHandler: ErrorHandler): ErrorHandler;
}
