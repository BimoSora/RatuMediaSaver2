"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageAction = void 0;
// Tgsnake - Telegram MTProto framework developed based on gram.js.
// Copyright (C) 2021 Butthx <https://guthub.com/butthx>
//
// This file is part of Tgsnake
//
// Tgsnake is a free software : you can redistribute it and/or modify
//  it under the terms of the MIT License as published.
var telegram_1 = require("telegram");
var Payment_1 = require("./Payment");
var Media_1 = require("./Media");
var ToBigInt_1 = require("./ToBigInt");
var MessageAction = /** @class */ (function () {
    function MessageAction() {
    }
    MessageAction.prototype.init = function (messageAction) {
        return __awaiter(this, void 0, void 0, function () {
            var c, _a, _b, users, media, c, _c, _d, users;
            var e_1, _e, e_2, _f;
            return __generator(this, function (_g) {
                if (messageAction instanceof telegram_1.Api.MessageActionChatCreate) {
                    messageAction;
                    this['_'] = 'chatCreate';
                    this.title = messageAction.title;
                    c = [];
                    try {
                        for (_a = __values(messageAction.users), _b = _a.next(); !_b.done; _b = _a.next()) {
                            users = _b.value;
                            c.push(BigInt((0, ToBigInt_1.toString)(users)));
                        }
                    }
                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                    finally {
                        try {
                            if (_b && !_b.done && (_e = _a.return)) _e.call(_a);
                        }
                        finally { if (e_1) throw e_1.error; }
                    }
                    this.users = c;
                    return [2 /*return*/, this];
                }
                if (messageAction instanceof telegram_1.Api.MessageActionChatEditTitle) {
                    messageAction;
                    this.title = messageAction.title;
                    this['_'] = 'editChatTitle';
                    return [2 /*return*/, this];
                }
                if (messageAction instanceof telegram_1.Api.MessageActionChatEditPhoto) {
                    messageAction;
                    this['_'] = 'editChatPhoto';
                    media = new Media_1.Media();
                    media.encode(messageAction.photo);
                    this.photo = media;
                    return [2 /*return*/, this];
                }
                if (messageAction instanceof telegram_1.Api.MessageActionChatAddUser) {
                    this['_'] = 'newChatMember';
                    messageAction;
                    c = [];
                    try {
                        for (_c = __values(messageAction.users), _d = _c.next(); !_d.done; _d = _c.next()) {
                            users = _d.value;
                            c.push(BigInt((0, ToBigInt_1.toString)(users)));
                        }
                    }
                    catch (e_2_1) { e_2 = { error: e_2_1 }; }
                    finally {
                        try {
                            if (_d && !_d.done && (_f = _c.return)) _f.call(_c);
                        }
                        finally { if (e_2) throw e_2.error; }
                    }
                    this.users = c;
                    return [2 /*return*/, this];
                }
                if (messageAction instanceof telegram_1.Api.MessageActionChatDeleteUser) {
                    messageAction;
                    this['_'] = 'leftChatMember';
                    this.userId = BigInt((0, ToBigInt_1.toString)(messageAction.userId));
                    return [2 /*return*/, this];
                }
                if (messageAction instanceof telegram_1.Api.MessageActionChatJoinedByLink) {
                    messageAction;
                    this['_'] = 'newChatMember';
                    this.inviterId = BigInt((0, ToBigInt_1.toString)(messageAction.inviterId));
                    return [2 /*return*/, this];
                }
                if (messageAction instanceof telegram_1.Api.MessageActionChannelCreate) {
                    messageAction;
                    this['_'] = 'channelCreate';
                    this.title = messageAction.title;
                    return [2 /*return*/, this];
                }
                if (messageAction instanceof telegram_1.Api.MessageActionChatMigrateTo) {
                    messageAction;
                    this['_'] = 'migrateTo';
                    this.channelId = BigInt("-100".concat((0, ToBigInt_1.toString)(messageAction.channelId)));
                    return [2 /*return*/, this];
                }
                if (messageAction instanceof telegram_1.Api.MessageActionChannelMigrateFrom) {
                    messageAction;
                    this['_'] = 'migrateFrom';
                    this.title = messageAction.title;
                    this.chatId = BigInt("-".concat((0, ToBigInt_1.toString)(messageAction.chatId)));
                    return [2 /*return*/, this];
                }
                if (messageAction instanceof telegram_1.Api.MessageActionGameScore) {
                    messageAction;
                    this['_'] = 'gameScore';
                    this.gameId = BigInt((0, ToBigInt_1.toString)(messageAction.gameId));
                    this.score = messageAction.score;
                    return [2 /*return*/, this];
                }
                if (messageAction instanceof telegram_1.Api.MessageActionPaymentSentMe) {
                    messageAction;
                    this['_'] = 'paymentSentMe';
                    this.currency = messageAction.currency;
                    this.totalAmount = BigInt((0, ToBigInt_1.toString)(messageAction.totalAmount));
                    this.payload = messageAction.payload.toString('utf8');
                    if (messageAction.info)
                        this.info = new Payment_1.PaymentRequestedInfo(messageAction.info);
                    if (messageAction.shippingOptionId)
                        this.shippingOptionId = messageAction.shippingOptionId;
                    if (messageAction.charge)
                        this.charge = new Payment_1.PaymentCharge(messageAction.charge);
                    return [2 /*return*/, this];
                }
                if (messageAction instanceof telegram_1.Api.MessageActionPaymentSent) {
                    messageAction;
                    this['_'] = 'paymentSent';
                    this.currency = messageAction.currency;
                    this.totalAmount = BigInt((0, ToBigInt_1.toString)(messageAction.totalAmount));
                    return [2 /*return*/, this];
                }
                if (messageAction instanceof telegram_1.Api.MessageActionPhoneCall) {
                    messageAction;
                    this['_'] = 'phoneCall';
                    this.video = messageAction.video;
                    this.callId = BigInt((0, ToBigInt_1.toString)(messageAction.callId));
                    if (messageAction.reason) {
                        this.reason = messageAction.reason.className
                            .replace('PhoneCallDiscardReason', '')
                            .trim()
                            .toLowerCase();
                    }
                    this.duration = messageAction.duration;
                    return [2 /*return*/, this];
                }
                if (messageAction instanceof telegram_1.Api.MessageActionCustomAction) {
                    messageAction;
                    this['_'] = 'customAction';
                    this.message = messageAction.message;
                    return [2 /*return*/, this];
                }
                if (messageAction instanceof telegram_1.Api.MessageActionBotAllowed) {
                    messageAction;
                    this['_'] = 'botAllowed';
                    this.domain = messageAction.domain;
                    return [2 /*return*/, this];
                }
                if (messageAction instanceof telegram_1.Api.MessageActionSecureValuesSentMe) {
                    messageAction;
                    this['_'] = 'secureValuesSentMe';
                    this.values = messageAction.values;
                    this.credentials = messageAction.credentials;
                    return [2 /*return*/, this];
                }
                if (messageAction instanceof telegram_1.Api.MessageActionSecureValuesSent) {
                    messageAction;
                    this['_'] = 'secureValuesSent';
                    this.types = messageAction.types;
                    return [2 /*return*/, this];
                }
                if (messageAction instanceof telegram_1.Api.MessageActionChatDeletePhoto) {
                    this['_'] = 'deleteChatPhoto';
                    return [2 /*return*/, this];
                }
                if (messageAction instanceof telegram_1.Api.MessageActionPinMessage) {
                    this['_'] = 'pinMessage';
                    return [2 /*return*/, this];
                }
                if (messageAction instanceof telegram_1.Api.MessageActionHistoryClear) {
                    this['_'] = 'historyClear';
                    return [2 /*return*/, this];
                }
                if (messageAction instanceof telegram_1.Api.MessageActionScreenshotTaken) {
                    this['_'] = 'screenshotTaken';
                    return [2 /*return*/, this];
                }
                if (messageAction instanceof telegram_1.Api.MessageActionContactSignUp) {
                    this['_'] = 'contactSingUp';
                    return [2 /*return*/, this];
                }
                if (messageAction instanceof telegram_1.Api.MessageActionGroupCall) {
                    messageAction;
                    this['_'] = 'groupCall';
                    this.call = messageAction.call;
                    this.duration = messageAction.duration;
                    return [2 /*return*/, this];
                }
                if (messageAction instanceof telegram_1.Api.MessageActionGroupCallScheduled) {
                    messageAction;
                    this['_'] = 'groupCallScheduled';
                    this.call = messageAction.call;
                    this.scheduleDate = messageAction.scheduleDate;
                    return [2 /*return*/, this];
                }
                return [2 /*return*/];
            });
        });
    };
    return MessageAction;
}());
exports.MessageAction = MessageAction;
