import { Api } from 'telegram';
import { BigInteger } from 'big-integer';
export declare let typeId: {
    THUMBNAIL: number;
    CHAT_PHOTO: number;
    PHOTO: number;
    VOICE: number;
    VIDEO: number;
    DOCUMENT: number;
    ENCRYPTED: number;
    TEMP: number;
    STICKER: number;
    AUDIO: number;
    ANIMATION: number;
    ENCRYPTED_THUMBNAIL: number;
    WALLPAPER: number;
    VIDEO_NOTE: number;
    SECURE_RAW: number;
    SECURE: number;
    BACKGROUND: number;
    DOCUMENT_AS_FILE: number;
};
export declare let thumbTypeId: {
    LEGACY: number;
    THUMBNAIL: number;
    CHAT_PHOTO_SMALL: number;
    CHAT_PHOTO_BIG: number;
    STICKER_SET_THUMBNAIL: number;
};
export interface GenerateFileId {
    version: number;
    subVersion: number;
    dcId: number;
    fileType: string | number;
    id: bigint | BigInteger;
    accessHash: bigint | BigInteger;
    typeId: number;
    fileReference?: string;
    url?: string;
    volumeId?: number | bigint | BigInteger;
    localId?: number;
    photoSizeSource?: 'legacy' | 'thumbnail' | 'dialogPhoto' | 'stickerSetThumbnail';
    photoSizeSourceId?: number;
    secret?: number;
    dialogId?: number | bigint | BigInteger;
    dialogAccessHash?: number | bigint | BigInteger;
    isSmallDialogPhoto?: boolean;
    stickerSetId?: number;
    stickerSetAccessHash?: number;
    thumbType?: string;
    thumbTypeId?: number;
}
export declare function generateFileId(medias: GenerateFileId): {
    fileId: string;
    uniqueFileId: string;
};
export declare class Media {
    type: 'sticker' | 'document' | 'photo' | 'location' | 'dice' | 'contact' | 'animation' | 'video' | 'poll' | 'venue' | 'videoNote' | 'voice' | 'webPage' | 'game' | 'invoice';
    fileId: string;
    uniqueFileId: string;
    fileName: string;
    emoji: string;
    width: number;
    height: number;
    isAnimated: boolean;
    dcId: number;
    size: number;
    value: number;
    closed: boolean;
    publicVoters: boolean;
    multipleChoice: boolean;
    quiz: boolean;
    question: string;
    answers: string[];
    longitude: number;
    latitude: number;
    phoneNumber: string;
    firstName: string;
    lastName: string;
    vcard: string;
    userId: bigint;
    constructor();
    private stickerToFileId;
    private photoToFileId;
    private formatPoll;
    private contact;
    encode(media?: Api.Document | Api.Photo | Api.MessageMediaDice | Api.Poll | Api.GeoPoint | Api.MessageMediaContact): this;
    decode(fileId?: string): "FileId not found!" | import("tg-file-id/dist/types/FileIdInfo").FileIdInfo;
    parseMedia(media: Api.TypeMessageMedia): Api.Document | Api.Photo | Api.Poll | Api.MessageMediaContact | Api.MessageMediaDice | Api.GeoPoint | undefined;
}
